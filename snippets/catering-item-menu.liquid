<!-- /snippets/product-grid-item.liquid -->
{% comment %}

  This snippet is used to showcase each product during the loop,
  'for product in collection.products' in collection.liquid.

  A liquid variable (grid_item_width) is set just before the this
  snippet is included to change the size of the container.
  Once the variable is set on a page, all future instances of this
  snippet will use that width. Overwrite the variable to adjust this.

  Example
    - assign grid_item_width = 'large--one-quarter medium--one-half'

{% endcomment %}

{% comment %}
  Set the default grid_item_width if no variable is set
{% endcomment %}
{% unless grid_item_width %}
  {% assign grid_item_width = 'large--one-half medium--one-half small--one-whole' %}
{% endunless %}

{% comment %}
  Check if the product is on sale and set a variable to be used below.
{% endcomment %}
{% assign on_sale = false %}
{% if product.compare_at_price > product.price %}
  {% assign on_sale = true %}
{% endif %}

{% comment %}
  Check if the product is sold out and set a variable to be used below.
{% endcomment %}
{% assign sold_out = true %}
{% if product.available %}
  {% assign sold_out = false %}
{% endif %}

<div class="grid__item {{ grid_item_width }}">
  <div class="card card-shadow-no-hover text-center">

  {% comment %}
    Link to your product with the 'within: collection' filter for the link to be aware of the collection.
    This allows you to create collection-based navigation on the product page.

    Results of using 'within: collection':
    - Instead of a URL with /products/product-handle
      you would get /collections/collection-handle/products/product-handle

    For more info on navigation within a collection
      - http://docs.shopify.com/support/your-store/collections/how-to-navigate-within-a-collection

  {% endcomment %}
   <p class="h2">
    <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
  </p>
  <a href="{{ product.url | within: collection }}" class="grid__image">
    <img src="{{ product.featured_image.src | img_url: 'large' }}" alt="{{ product.featured_image.alt | escape }}">
  </a>
  <p class="price">
    {% comment %}
      You can show a leading 'from' or 'up to' by checking 'product.price_varies'
      if your variants have different prices.
    {% endcomment %}
    {% if on_sale %}
      {% if product.price_varies %}
        {% assign sale_price = product.price | money %}
        {{ 'products.product.on_sale_from_html' | t: price: sale_price }}
      {% else %}
        <strong>{{ 'products.product.on_sale' | t }}</strong>
        {{ product.price | money }}
      {% endif %}
    {% else %}
      {% if product.price_varies %}
        {% assign price = product.price | money %}
        {{ 'products.general.from_text_html' | t: price: price }}
      {% else %}
        
        <h3 class="price">{{ product.price | money }}</h3>
        per head <br><br>
        <label for="Quantity" class="quantity-selector">{{ 'products.product.quantity' | t }}</label>
          <input type="number" id="Quantity" class="input-center" name="quantity" value="1" min="1" class="quantity-selector">

          <button type="submit" name="add" id="AddToCart" class="btn shadow-1 ">
          <span id="AddToCartText">Order now</span>
        </button>
        <br><br>


        <a href="{{ product.url | within: collection }}" class="price-link">
          <span class="product-btn shadow-1">View Details</span>
        </a>
      {% endif %}
    {% endif %}
    {% if sold_out %}
      <br><strong>{{ 'products.product.sold_out' | t }}</strong>
      {% else %}
      {% comment %}
        ID addToCartForm is a selector for the ajax cart plugin
      {% endcomment %}
      <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" class="form-vertical">

        {% comment %}
          Add product variants as a dropdown.
            - By default, each variant (or combination of variants) will display as its own <option>
            - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

          You can leverage jQuery to add a callback on page load and each time the select element changes:
            - Include option_selection.js (as seen at the bottom of this file)
            - This allows you to use JavaScript anytime the variant dropdown changes
            - This also separates out your variant options (ie. size, color, etc.) to separate select elements

          For more information on products with multiple options, visit:
            - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
        {% endcomment %}
        <select name="id" id="productSelect" class="product-single__variants visually-hidden">
          {% for variant in product.variants %}
            {% if variant.available %}

              {% comment %}
                Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
              {% endcomment %}
              <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>

            {% else %}
              <option disabled="disabled">
                {{ variant.title }} - {{ 'products.product.sold_out' | t }}
              </option>
            {% endif %}
          {% endfor %}
        </select>

        <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
        <span id="ProductPrice" class="h2" itemprop="price" content="{{ current_variant.price | divided_by: 100 }}">
          {{ current_variant.price | money }}
        </span>

        {% if product.compare_at_price_max > product.price %}
          <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
          <p id="ComparePrice">
            {{ 'products.product.compare_at' | t }} {{ current_variant.compare_at_price | money }}
          </p>
        {% endif %}
        

        
      </form>
    {% endif %}
    {% if on_sale %}
      <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
      <br><s>{{ product.compare_at_price | money }}</s>
    {% endif %}
  </p>
  </div>
</div>
